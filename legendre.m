% HECHO POR TOMAS VIDAL% CUADRATURAS GAUSSIANAS% HERMITEclc; clear all; format long;global result = 0;% CARGO LOS ARCHIVOS CON LAS MATRICESh2 = importdata('legendre_2.txt');h3 = importdata('legendre_3.txt');h4 = importdata('legendre_4.txt');h5 = importdata('legendre_5.txt');% SEPARO LAS RAICES Y LOS PESOS EN DIFERENTES VECTORESxh2 = h2([1:2]);wh2 = h2([3:4]);xh3 = h3([1:3]);wh3 = h3([4:6]);xh4 = h4([1:4]);wh4 = h4([5:8]);xh5 = h5([1:5]);wh5 = h5([6:10]);r = xh3; % r de raizp = wh3; % p de pesoglobal select_precision = 0;% CON ESTO SE SELECCIONA LA MATRIZ QUE SE QUIERE USARwhile (select_precision != 2 && select_precision != 3 && select_precision != 4 && select_precision != 5)  % HAGO UN LOOP CONTINUO HASTA QUE SE INSERTA LA RESPUESTA CORRECTA  select_precision = input("Polinomios de Hermite: 2, 3, 4 o 5? \n");    switch (select_precision)    case 2      r = xh2;      p = wh2;    case 3      r = xh3;      p = wh3;    case 4      r = xh4;      p = wh4;    case 5      r = xh5;      p = wh5;    otherwise      clc;      disp("Elegi un numero correcto");  endswitchendwhile% DEFINO LA FUNCION DE HERMITE PARA EVALUAR LAS RAICESfunction integral_function = f(x)  integral_function = exp(-x^2/2)/sqrt(2*pi);endfunction% PRIMERO USO LA MATRIZ DE 2X2for (n=1:1:length(r));  disp(r(n));  fx0 = f(r(n));  aproximation = p(n)*fx0;  result = result + aproximation;endfordisp("Resultado: ");disp(result);